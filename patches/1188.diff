diff --git a/CPP/Common/MyBuffer2.h b/CPP/Common/MyBuffer2.h
index ba98d13..d61a72e 100644
--- a/CPP/Common/MyBuffer2.h
+++ b/CPP/Common/MyBuffer2.h
@@ -42,4 +42,59 @@ Hunk #4, a/CPP/Common/MyBuffer2.h class CMidBuffer
   }
 };
 
+
+class CAlignedBuffer
+{
+  Byte *_data;
+  size_t _size;
+
+  CLASS_NO_COPY(CAlignedBuffer)
+
+public:
+  CAlignedBuffer(): _data(NULL), _size(0) {}
+  ~CAlignedBuffer()
+  {
+    ISzAlloc_Free(&g_AlignedAlloc, _data);
+  }
+
+  void Free()
+  {
+    ISzAlloc_Free(&g_AlignedAlloc, _data);
+    _data = NULL;
+    _size = 0;
+  }
+
+  bool IsAllocated() const { return _data != NULL; }
+  operator       Byte *()       { return _data; }
+  operator const Byte *() const { return _data; }
+  size_t Size() const { return _size; }
+
+  void Alloc(size_t size)
+  {
+    if (!_data || size != _size)
+    {
+      ISzAlloc_Free(&g_AlignedAlloc, _data);
+      _size = 0;
+      _data = NULL;
+      _data = (Byte *)ISzAlloc_Alloc(&g_AlignedAlloc, size);
+      if (_data)
+        _size = size;
+    }
+  }
+
+  void AllocAtLeast(size_t size)
+  {
+    if (!_data || size > _size)
+    {
+      ISzAlloc_Free(&g_AlignedAlloc, _data);
+      _size = 0;
+      _data = NULL;
+      _data = (Byte *)ISzAlloc_Alloc(&g_AlignedAlloc, size);
+      if (_data)
+        _size = size;
+    }
+  }
+};
+
+
 #endif
