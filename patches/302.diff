diff --git a/C/XzDec.c b/C/XzDec.c
index 67216a5..395e83f 100644
--- a/C/XzDec.c
+++ b/C/XzDec.c
@@ -260,33 +260,53 @@ Hunk #7, a/C/XzDec.c static SRes SbState_Code(void *pp, Byte *dest, SizeT *destLen, const Byte *src,
   res = SbDec_Decode((CSbDec *)pp);
   *destLen -= p->destLen;
   *srcLen -= p->srcLen;
-  *wasFinished = (*destLen == 0 && *srcLen == 0); /* change it */
+  // *wasFinished = (*destLen == 0 && *srcLen == 0); /* change it */
+  *status = (*destLen == 0 && *srcLen == 0) ?
+      CODER_STATUS_FINISHED_WITH_MARK :
+      CODER_STATUS_NOT_FINISHED;
   return res;
 }
 
-SRes SbState_SetFromMethod(IStateCoder *p, ISzAllocPtr alloc)
+static SRes SbState_SetFromMethod(IStateCoder *p, ISzAllocPtr alloc)
 {
-  CSbDec *decoder;
-  p->p = 0;
-  decoder = ISzAlloc_Alloc(alloc, sizeof(CSbDec));
+  CSbDec *decoder = (CSbDec *)p->p;
   if (!decoder)
-    return SZ_ERROR_MEM;
-  p->p = decoder;
-  p->Free = SbState_Free;
-  p->SetProps = SbState_SetProps;
-  p->Init = SbState_Init;
-  p->Code = SbState_Code;
+  {
+    decoder = (CSbDec *)ISzAlloc_Alloc(alloc, sizeof(CSbDec));
+    if (!decoder)
+      return SZ_ERROR_MEM;
+    p->p = decoder;
+    p->Free = SbState_Free;
+    p->SetProps = SbState_SetProps;
+    p->Init = SbState_Init;
+    p->Code2 = SbState_Code2;
+    p->Filter = NULL;
+  }
   SbDec_Construct(decoder);
   SbDec_SetAlloc(decoder, alloc);
   return SZ_OK;
 }
+
 #endif
 
-/* ---------- Lzma2State ---------- */
+
+
+/* ---------- Lzma2 ---------- */
+
+typedef struct
+{
+  CLzma2Dec decoder;
+  BoolInt outBufMode;
+} CLzma2Dec_Spec;
+
 
 static void Lzma2State_Free(void *pp, ISzAllocPtr alloc)
 {
-  Lzma2Dec_Free((CLzma2Dec *)pp, alloc);
+  CLzma2Dec_Spec *p = (CLzma2Dec_Spec *)pp;
+  if (p->outBufMode)
+    Lzma2Dec_FreeProbs(&p->decoder, alloc);
+  else
+    Lzma2Dec_Free(&p->decoder, alloc);
   ISzAlloc_Free(alloc, pp);
 }
 
