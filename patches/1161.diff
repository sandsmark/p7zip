diff --git a/CPP/7zip/UI/GUI/HashGUI.cpp b/CPP/7zip/UI/GUI/HashGUI.cpp
index cc93f07..37cd65e 100644
--- a/CPP/7zip/UI/GUI/HashGUI.cpp
+++ b/CPP/7zip/UI/GUI/HashGUI.cpp
@@ -229,32 +229,57 @@ Hunk #8, a/CPP/7zip/UI/GUI/HashGUI.cpp void AddHashBundleRes(UString &s, const CHashBundle &hb, const UString &firstFil
   }
 }
 
-HRESULT CHashCallbackGUI::AfterLastFile(const CHashBundle &hb)
+
+void AddHashBundleRes(UString &s, const CHashBundle &hb)
 {
-  UString s;
-  AddHashBundleRes(s, hb, FirstFileName);
+  CPropNameValPairs pairs;
+  AddHashBundleRes(pairs, hb);
   
-  CProgressSync &sync = ProgressDialog.Sync;
+  FOR_VECTOR (i, pairs)
+  {
+    const CProperty &pair = pairs[i];
+    s += pair.Name;
+    s += ": ";
+    s += pair.Value;
+    s.Add_LF();
+  }
+
+  if (hb.NumErrors == 0 && hb.Hashers.IsEmpty())
+  {
+    s.Add_LF();
+    AddLangString(s, IDS_MESSAGE_NO_ERRORS);
+    s.Add_LF();
+  }
+}
+
+
+HRESULT CHashCallbackGUI::AfterLastFile(CHashBundle &hb)
+{
+  hb.FirstFileName = FirstFileName;
+  // MainPath
+  AddHashBundleRes(PropNameValPairs, hb);
+  
+  CProgressSync &sync = Sync;
   sync.Set_NumFilesCur(hb.NumFiles);
 
-  CProgressMessageBoxPair &pair = GetMessagePair(hb.NumErrors != 0);
-  pair.Message = s;
-  LangString(IDS_CHECKSUM_INFORMATION, pair.Title);
+  // CProgressMessageBoxPair &pair = GetMessagePair(hb.NumErrors != 0);
+  // pair.Message = s;
+  // LangString(IDS_CHECKSUM_INFORMATION, pair.Title);
 
   return S_OK;
 }
 
+
 HRESULT CHashCallbackGUI::ProcessVirt()
 {
   NumFiles = 0;
-
   AString errorInfo;
   HRESULT res = HashCalc(EXTERNAL_CODECS_LOC_VARS
       *censor, *options, errorInfo, this);
-
   return res;
 }
 
+
 HRESULT HashCalcGUI(
     DECL_EXTERNAL_CODECS_LOC_VARS
     const NWildcard::CCensor &censor,
