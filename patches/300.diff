diff --git a/C/XzDec.c b/C/XzDec.c
index 67216a5..395e83f 100644
--- a/C/XzDec.c
+++ b/C/XzDec.c
@@ -192,36 +192,42 @@ Hunk #5, a/C/XzDec.c static SRes BraState_Code(void *pp, Byte *dest, SizeT *destLen, const Byte *src,
       p->bufConv = p->bufTotal;
     }
   }
-  if (p->bufTotal == p->bufPos && srcLenOrig == 0 && srcWasFinished)
-    *wasFinished = 1;
+
+  if (p->bufTotal == p->bufPos && srcRem == 0 && srcWasFinished)
+  {
+    *status = CODER_STATUS_FINISHED_WITH_MARK;
+    // *wasFinished = 1;
+  }
+
   return SZ_OK;
 }
 
+
 SRes BraState_SetFromMethod(IStateCoder *p, UInt64 id, int encodeMode, ISzAllocPtr alloc)
 {
   CBraState *decoder;
-  if (id != XZ_ID_Delta &&
-      id != XZ_ID_X86 &&
-      id != XZ_ID_PPC &&
-      id != XZ_ID_IA64 &&
-      id != XZ_ID_ARM &&
-      id != XZ_ID_ARMT &&
-      id != XZ_ID_SPARC)
+  if (id < XZ_ID_Delta || id > XZ_ID_SPARC)
     return SZ_ERROR_UNSUPPORTED;
-  p->p = 0;
-  decoder = (CBraState *)ISzAlloc_Alloc(alloc, sizeof(CBraState));
+  decoder = (CBraState *)p->p;
   if (!decoder)
-    return SZ_ERROR_MEM;
+  {
+    decoder = (CBraState *)ISzAlloc_Alloc(alloc, sizeof(CBraState));
+    if (!decoder)
+      return SZ_ERROR_MEM;
+    p->p = decoder;
+    p->Free = BraState_Free;
+    p->SetProps = BraState_SetProps;
+    p->Init = BraState_Init;
+    p->Code2 = BraState_Code2;
+    p->Filter = BraState_Filter;
+  }
   decoder->methodId = (UInt32)id;
   decoder->encodeMode = encodeMode;
-  p->p = decoder;
-  p->Free = BraState_Free;
-  p->SetProps = BraState_SetProps;
-  p->Init = BraState_Init;
-  p->Code = BraState_Code;
   return SZ_OK;
 }
 
+
+
 /* ---------- SbState ---------- */
 
 #ifdef USE_SUBBLOCK
