diff --git a/CPP/7zip/UI/Common/ArchiveName.cpp b/CPP/7zip/UI/Common/ArchiveName.cpp
index a3a44ce..9048edc 100644
--- a/CPP/7zip/UI/Common/ArchiveName.cpp
+++ b/CPP/7zip/UI/Common/ArchiveName.cpp
@@ -72,7 +72,82 @@ Hunk #3, a/CPP/7zip/UI/Common/ArchiveName.cpp static FString CreateArchiveName2(const FString &path, bool fromPrev, bool keepN
   return resultName;
 }
 
-UString CreateArchiveName(const UString &path, bool fromPrev, bool keepName)
+
+UString CreateArchiveName(const UStringVector &paths, const NFind::CFileInfo *fi)
 {
-  return Get_Correct_FsFile_Name(fs2us(CreateArchiveName2(us2fs(path), fromPrev, keepName)));
+  bool keepName = false;
+  /*
+  if (paths.Size() == 1)
+  {
+    const UString &name = paths[0];
+    if (name.Len() > 4)
+      if (CompareFileNames(name.RightPtr(4), L".tar") == 0)
+        keepName = true;
+  }
+  */
+
+  UString name;
+  if (fi)
+    name = CreateArchiveName(*fi, keepName);
+  else
+  {
+    if (paths.IsEmpty())
+      return L"archive";
+    bool fromPrev = (paths.Size() > 1);
+    name = Get_Correct_FsFile_Name(fs2us(CreateArchiveName2(us2fs(paths.Front()), fromPrev, keepName)));
+  }
+
+  UStringVector names;
+
+  {
+    FOR_VECTOR (i, paths)
+    {
+      NFind::CFileInfo fi2;
+      const NFind::CFileInfo *fp;
+      if (fi && paths.Size() == 1)
+        fp = fi;
+      else
+      {
+        if (!fi2.Find(us2fs(paths[i])))
+          continue;
+        fp = &fi2;
+      }
+      names.Add(fs2us(fp->Name));
+    }
+  }
+
+  UString postfix;
+  UInt32 index = 1;
+
+  for (;;)
+  {
+    // we don't want cases when we include archive to itself.
+    // so we find first available name for archive
+    const UString name2 = name + postfix;
+    const UString name2_zip = name2 + L".zip";
+    const UString name2_7z = name2 + L".7z";
+    const UString name2_tar = name2 + L".tar";
+    const UString name2_wim = name2 + L".wim";
+    
+    unsigned i = 0;
+
+    for (i = 0; i < names.Size(); i++)
+    {
+      const UString &fname = names[i];
+      if (   0 == CompareFileNames(fname, name2_zip)
+          || 0 == CompareFileNames(fname, name2_7z)
+          || 0 == CompareFileNames(fname, name2_tar)
+          || 0 == CompareFileNames(fname, name2_wim))
+        break;
+    }
+    
+    if (i == names.Size())
+      break;
+    index++;
+    postfix = "_";
+    postfix.Add_UInt32(index);
+  }
+  
+  name += postfix;
+  return name;
 }
