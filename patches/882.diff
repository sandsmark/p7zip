diff --git a/CPP/7zip/UI/Common/Bench.cpp b/CPP/7zip/UI/Common/Bench.cpp
index d0fead7..f849a87 100644
--- a/CPP/7zip/UI/Common/Bench.cpp
+++ b/CPP/7zip/UI/Common/Bench.cpp
@@ -1287,30 +1287,50 @@ Hunk #27, a/CPP/7zip/UI/Common/Bench.cpp static HRESULT MethodBench(
       CBenchProgressInfo *bpi = encoder.progressInfoSpec[0];
       bpi->Callback = callback;
       bpi->BenchInfo.NumIterations = numEncoderThreads;
-      bpi->SetStartTime();
     }
 
     #ifndef _7ZIP_ST
-    if (numEncoderThreads > 1)
+    if (mtEncMode)
     {
       #ifdef USE_ALLOCA
       encoder.AllocaSize = (i * 16 * 21) & 0x7FF;
       #endif
 
+      encoder.Common = &encoderFlusher.Common;
       RINOK(encoder.CreateEncoderThread())
     }
-    else
     #endif
-    {
-      RINOK(encoder.Encode());
-    }
   }
-  
+
+  if (printCallback)
+  {
+    RINOK(printCallback->CheckBreak());
+  }
+
   #ifndef _7ZIP_ST
-  if (numEncoderThreads > 1)
+  if (mtEncMode)
+  {
     for (i = 0; i < numEncoderThreads; i++)
-      encoders[i].thread[0].Wait();
+    {
+      CEncoderInfo &encoder = encoders[i];
+      WRes wres = encoder.ReadyEvent.Lock();
+      if (wres != 0)
+        return HRESULT_FROM_WIN32(wres);
+      RINOK(encoder.Results[0]);
+    }
+
+    CBenchProgressInfo *bpi = encoders[0].progressInfoSpec[0];
+    bpi->SetStartTime();
+
+    WRes wres = encoderFlusher.StartAndWait();
+    if (status.Res == 0 && wres != 0)
+      return HRESULT_FROM_WIN32(wres);
+  }
+  else
   #endif
+  {
+    RINOK(encoders[0].Encode());
+  }
 
   RINOK(status.Res);
 
