diff --git a/C/XzDec.c b/C/XzDec.c
index 67216a5..395e83f 100644
--- a/C/XzDec.c
+++ b/C/XzDec.c
@@ -580,31 +580,47 @@ Hunk #15, a/C/XzDec.c SRes XzBlock_Parse(CXzBlock *p, const Byte *header)
   return SZ_OK;
 }
 
-SRes XzDec_Init(CMixCoder *p, const CXzBlock *block)
+
+
+
+static SRes XzDecMix_Init(CMixCoder *p, const CXzBlock *block, Byte *outBuf, size_t outBufSize)
 {
   unsigned i;
-  Bool needReInit = True;
+  BoolInt needReInit = True;
   unsigned numFilters = XzBlock_GetNumFilters(block);
-  
-  if (numFilters == p->numCoders)
+
+  if (numFilters == p->numCoders && ((p->outBuf && outBuf) || (!p->outBuf && !outBuf)))
   {
+    needReInit = False;
     for (i = 0; i < numFilters; i++)
       if (p->ids[i] != block->filters[numFilters - 1 - i].id)
+      {
+        needReInit = True;
         break;
-    needReInit = (i != numFilters);
+      }
   }
+
+  // p->SingleBufMode = (outBuf != NULL);
+  p->outBuf = outBuf;
+  p->outBufSize = outBufSize;
+
+  // p->SingleBufMode = False;
+  // outBuf = NULL;
   
   if (needReInit)
   {
     MixCoder_Free(p);
-    p->numCoders = numFilters;
     for (i = 0; i < numFilters; i++)
     {
-      const CXzFilter *f = &block->filters[numFilters - 1 - i];
-      RINOK(MixCoder_SetFromMethod(p, i, f->id));
+      RINOK(MixCoder_SetFromMethod(p, i, block->filters[numFilters - 1 - i].id, outBuf, outBufSize));
     }
+    p->numCoders = numFilters;
   }
-  
+  else
+  {
+    RINOK(MixCoder_ResetFromMethod(p, 0, block->filters[numFilters - 1].id, outBuf, outBufSize));
+  }
+
   for (i = 0; i < numFilters; i++)
   {
     const CXzFilter *f = &block->filters[numFilters - 1 - i];
